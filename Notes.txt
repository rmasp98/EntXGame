This is a notepad for things I need to do or think about

TODO:
 3. Clean up what we pass to shaders (could pass it in blocks)
    a. Shadowmaps are currently being sent to a second light struct. Need to figure out why it breaks in the first struct
    b. This could be done by a CubemapArray (upgraded to GLSL 4.0 to use this)
 6. Keymap menu
 9. Write solution finder
 11. Need to improve object and image loader (and therefore the renderer as well)
    a. Turns out some objects don't have norms (norm maps instead) so need to adapt program accordingly (gen buffers and shaders)
 12. Need to set up random level generator with potential threading (really big job)
 13. Fix player vibrating in corners
 21. Look up a better way to do PCF for point light shadows
 22. Need to try and improve performance!!!
    a. Need to quantify where the bottle necks are
    b. Flickering pointer in in-game menu (may just be a frame rate issue)
 24. Need to add window resolution an global variable configurable in options
    b. Make a configurable option
 25. Currently no way to get rid of shadow acne and peter-panning on walls simulataneously
    a. May need to look into leveled shadow mapping but may become another drain on performance
 27. Clean up deferred rendering section
 28. Need to determine good values for the linear and quadratic light attenuation
 29. Could look into combining the quad used for Menu background and deferred rendering
 31. Assess whether menuGen needs to be a system as it does not initialise or update, just an event
 32. Fix bug where lights sometimes don't show (may need to set up proper destructors)
 33. Need to implement cmake for building the game


Things to think about:
 - Normal mapping (https://learnopengl.com/#!Advanced-Lighting/Normal-Mapping)
 - Need to set up multisampling capability in textures (https://learnopengl.com/#!Advanced-OpenGL/Anti-Aliasing)
 - Think about setting up instancing for boxes (https://learnopengl.com/#!Advanced-OpenGL/Instancing)
 - Paralax mapping. Its cool but not really needed at this point (https://learnopengl.com/#!Advanced-Lighting/Parallax-Mapping)
 - High Dynamic Range (HDR) compensates for extremes in light exposure (https://learnopengl.com/#!Advanced-Lighting/HDR)
 - Bloom, blurs bright light sources (https://learnopengl.com/#!Advanced-Lighting/Bloom)
 - Potentially add SSAO (https://learnopengl.com/#!Advanced-Lighting/SSAO)
 - Abstract all referencing to OpenGL and GLFW to make it potentially platform independent
 - Add feature where boxes recenter when they are not pushed all the way off Goal (could see if distance decreases from goal)
 - HUD showing bev and scores
 - Possibility to undo a move

Done:
 1. I need to set up deferred rendering for my lighting
 2. Add material shininess to entity
 4. Shadows! (https://learnopengl.com/#!Advanced-Lighting/Shadows/Shadow-Mapping and https://learnopengl.com/#!Advanced-Lighting/Shadows/Point-Shadows)
   a. geometry shader loader
   b. remove all reference to shaders directly in entities
   c. load shaders in render system
   d. rearrange renderer to minimise the ammount passed to shader per entity
   e. add preparation stuff for shadow pass
   f. create the shadow shaders
   g. Need to create VAOs for shadow buffer - turns out not needed as VAO are not program dependent
   h. pass the cube map to main shaders
   i. Alter main shaders to account for shadows
   j. Implement for multiple lights
 8. Make easier to push boxes into corridors (scaled down boxes so they fit easier)
 10. Need to sort out input system for menu code
 14. Resume button in in-game menu raises camera a little - because not updating cursor position in input entity (see 10)
 15. Implement Blinn-phong lighting (https://learnopengl.com/#!Advanced-Lighting/Advanced-Lighting)
 16. Add gamma correction to final shader pass (https://learnopengl.com/#!Advanced-Lighting/Gamma-Correction)
 17. Resume button in in-game menu returns to main menu - was finding cursor position multiple times
 18. Tidy up entity storage and buffer generation (may not need to store all I do currently) - removed verts, norms, uvs from renderable as they are only needed briefly for gen buffers
 19. Clean up shader loader (could pass vector of strings that loops over repeated code)
 24. Need to add window resolution an global variable configurable in options
    a. Make global variable in RenderSystem
 30. Need to remove window from RenderSystem
